// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RegistroPedidosSuplidor.DAL;

namespace RegistroPedidosSuplidor.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20200630215456_Migracion_Inicial")]
    partial class Migracion_Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5");

            modelBuilder.Entity("RegistroPedidosSuplidor.Entidades.Ordenes", b =>
                {
                    b.Property<int>("OrdenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<double>("Monto")
                        .HasColumnType("REAL");

                    b.Property<string>("SuplidorId")
                        .HasColumnType("TEXT");

                    b.HasKey("OrdenId");

                    b.ToTable("Ordenes");
                });

            modelBuilder.Entity("RegistroPedidosSuplidor.Entidades.OrdenesDetalle", b =>
                {
                    b.Property<int>("OrdenId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Costo")
                        .HasColumnType("REAL");

                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.HasKey("OrdenId");

                    b.ToTable("OrdenesDetalle");
                });

            modelBuilder.Entity("RegistroPedidosSuplidor.Entidades.Productos", b =>
                {
                    b.Property<int>("ProductoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Costo")
                        .HasColumnType("REAL");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<int>("Invetario")
                        .HasColumnType("INTEGER");

                    b.HasKey("ProductoId");

                    b.ToTable("Productos");

                    b.HasData(
                        new
                        {
                            ProductoId = 1,
                            Costo = 1500.5,
                            Descripcion = "Es un producto 1",
                            Invetario = 10
                        },
                        new
                        {
                            ProductoId = 2,
                            Costo = 5000.0,
                            Descripcion = "Es un producto 2",
                            Invetario = 10
                        },
                        new
                        {
                            ProductoId = 3,
                            Costo = 3000.0,
                            Descripcion = "Es un producto 3",
                            Invetario = 10
                        },
                        new
                        {
                            ProductoId = 4,
                            Costo = 120.0,
                            Descripcion = "Es un producto 4",
                            Invetario = 10
                        },
                        new
                        {
                            ProductoId = 5,
                            Costo = 4560.0,
                            Descripcion = "Es un producto 5",
                            Invetario = 10
                        },
                        new
                        {
                            ProductoId = 6,
                            Costo = 2000.0,
                            Descripcion = "Es un producto 6",
                            Invetario = 10
                        },
                        new
                        {
                            ProductoId = 7,
                            Costo = 1000.0,
                            Descripcion = "Es un producto 7",
                            Invetario = 10
                        });
                });

            modelBuilder.Entity("RegistroPedidosSuplidor.Entidades.Suplidores", b =>
                {
                    b.Property<int>("SuplidoreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombres")
                        .HasColumnType("TEXT");

                    b.HasKey("SuplidoreId");

                    b.ToTable("Suplidores");

                    b.HasData(
                        new
                        {
                            SuplidoreId = 1,
                            Nombres = "Victor"
                        },
                        new
                        {
                            SuplidoreId = 2,
                            Nombres = "Johan"
                        },
                        new
                        {
                            SuplidoreId = 3,
                            Nombres = "Palma"
                        },
                        new
                        {
                            SuplidoreId = 4,
                            Nombres = "Rodríguez"
                        });
                });

            modelBuilder.Entity("RegistroPedidosSuplidor.Entidades.OrdenesDetalle", b =>
                {
                    b.HasOne("RegistroPedidosSuplidor.Entidades.Ordenes", null)
                        .WithMany("OrdenesDetalles")
                        .HasForeignKey("OrdenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
